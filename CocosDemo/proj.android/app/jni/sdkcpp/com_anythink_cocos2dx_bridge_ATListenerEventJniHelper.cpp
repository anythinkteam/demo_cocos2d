/* DO NOT EDIT THIS FILE - it is machine generated */

#include <jni.h>
#include "AppDelegate.h"
#include "com_anythink_cocos2dx_bridge_ATListenerEventJniHelper.h"
#include "cocos2d.h"
#include "ATListenerManager.h"
#include "ATUtil.h"

/* Header for class com_anythink_cocos2dx_bridge_ATListenerEventJniHelper */

#ifndef _Included_com_anythink_cocos2dx_bridge_ATListenerEventJniHelper_imp
#define _Included_com_anythink_cocos2dx_bridge_ATListenerEventJniHelper_imp
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_anythink_cocos2dx_bridge_ATListenerEventJniHelper
 * Method:    onBannerLoaded
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_anythink_cocos2dx_bridge_ATListenerEventJniHelper_onBannerLoaded
        (JNIEnv *pEven, jclass pJclass, jstring placementIdJstring) {

    char *placementId = ATUtil::jstringTostring(pEven, placementIdJstring);
    ATCocosBannerAdListener *bannerAdListener = ATListenerManager::getInstance()->getBannerListener(
            placementId);
    if (bannerAdListener != NULL) {
        bannerAdListener->onBannerAdLoadSuccess(placementId);
    }

}

/*
 * Class:     com_anythink_cocos2dx_bridge_ATListenerEventJniHelper
 * Method:    onBannerFailed
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_anythink_cocos2dx_bridge_ATListenerEventJniHelper_onBannerFailed
        (JNIEnv *pEven, jclass pJclass, jstring placementIdJstring, jstring errorMsg) {
    char *placementId = ATUtil::jstringTostring(pEven, placementIdJstring);
    char *errorString = ATUtil::jstringTostring(pEven, errorMsg);
    ATCocosBannerAdListener *bannerAdListener = ATListenerManager::getInstance()->getBannerListener(
            placementId);
    if (bannerAdListener != NULL) {
        bannerAdListener->onBannerAdLoadFailed(placementId, errorString);
    }

}

/*
 * Class:     com_anythink_cocos2dx_bridge_ATListenerEventJniHelper
 * Method:    onBannerClicked
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_anythink_cocos2dx_bridge_ATListenerEventJniHelper_onBannerClicked
        (JNIEnv *pEven, jclass pJclass, jstring placementIdJstring) {
    char *placementId = ATUtil::jstringTostring(pEven, placementIdJstring);
    ATCocosBannerAdListener *bannerAdListener = ATListenerManager::getInstance()->getBannerListener(
            placementId);
    if (bannerAdListener != NULL) {
        bannerAdListener->onBannerClicked(placementId);
    }
}

/*
 * Class:     com_anythink_cocos2dx_bridge_ATListenerEventJniHelper
 * Method:    onBannerShow
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_anythink_cocos2dx_bridge_ATListenerEventJniHelper_onBannerShow
        (JNIEnv *pEven, jclass pJclass, jstring placementIdJstring) {
    char *placementId = ATUtil::jstringTostring(pEven, placementIdJstring);
    ATCocosBannerAdListener *bannerAdListener = ATListenerManager::getInstance()->getBannerListener(
            placementId);
    if (bannerAdListener != NULL) {
        bannerAdListener->onBannerShow(placementId);
    }
}

/*
 * Class:     com_anythink_cocos2dx_bridge_ATListenerEventJniHelper
 * Method:    onBannerClose
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_anythink_cocos2dx_bridge_ATListenerEventJniHelper_onBannerClose
        (JNIEnv *pEven, jclass pJclass, jstring placementIdJstring) {
    char *placementId = ATUtil::jstringTostring(pEven, placementIdJstring);
    ATCocosBannerAdListener *bannerAdListener = ATListenerManager::getInstance()->getBannerListener(
            placementId);
    if (bannerAdListener != NULL) {
        bannerAdListener->onBannerClose(placementId);
    }
}

/*
* Class:     com_anythink_cocos2dx_bridge_ATListenerEventJniHelper
* Method:    onBannerClose
* Signature: ()V
*/
JNIEXPORT void JNICALL
Java_com_anythink_cocos2dx_bridge_ATListenerEventJniHelper_onBannerAutoRefreshed
        (JNIEnv *pEven, jclass pJclass, jstring placementIdJstring) {
    char *placementId = ATUtil::jstringTostring(pEven, placementIdJstring);
    ATCocosBannerAdListener *bannerAdListener = ATListenerManager::getInstance()->getBannerListener(
            placementId);
    if (bannerAdListener != NULL) {
        bannerAdListener->onBannerAutoRefresh(placementId);
    }
}

/*
 * Class:     com_anythink_cocos2dx_bridge_ATListenerEventJniHelper
 * Method:    onBannerClose
 * Signature: ()V
 */
JNIEXPORT void JNICALL
Java_com_anythink_cocos2dx_bridge_ATListenerEventJniHelper_onBannerAutoRefreshFail
        (JNIEnv *pEven, jclass pJclass, jstring placementIdJstring, jstring errorMsg) {
    char *placementId = ATUtil::jstringTostring(pEven, placementIdJstring);
    char *errorString = ATUtil::jstringTostring(pEven, errorMsg);
    ATCocosBannerAdListener *bannerAdListener = ATListenerManager::getInstance()->getBannerListener(
            placementId);
    if (bannerAdListener != NULL) {
        bannerAdListener->onBannerAutoRefreshFail(placementId, errorString);
    }
}

/*
 * Class:     com_anythink_cocos2dx_bridge_ATListenerEventJniHelper
 * Method:    onInterstitialAdLoaded
 * Signature: ()V
 */
JNIEXPORT void JNICALL
Java_com_anythink_cocos2dx_bridge_ATListenerEventJniHelper_onInterstitialAdLoaded
        (JNIEnv *pEven, jclass pJclass, jstring placementIdJstring) {
    char *placementId = ATUtil::jstringTostring(pEven, placementIdJstring);
    ATCocosInterstitialAdListener *interstitialAdListener = ATListenerManager::getInstance()->getInterstitialListener(
            placementId);
    if (interstitialAdListener != NULL) {
        interstitialAdListener->onInterstitalLoadSuccess(placementId);
    }
}

/*
 * Class:     com_anythink_cocos2dx_bridge_ATListenerEventJniHelper
 * Method:    onInterstitialAdLoadFail
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL
Java_com_anythink_cocos2dx_bridge_ATListenerEventJniHelper_onInterstitialAdLoadFail
        (JNIEnv *pEven, jclass pJclass, jstring placementIdJstring, jstring errorMsg) {
    char *placementId = ATUtil::jstringTostring(pEven, placementIdJstring);
    char *errorString = ATUtil::jstringTostring(pEven, errorMsg);
    ATCocosInterstitialAdListener *interstitialAdListener = ATListenerManager::getInstance()->getInterstitialListener(
            placementId);
    if (interstitialAdListener != NULL) {
        interstitialAdListener->onInterstitalLoadFailed(placementId, errorString);
    }
}

/*
 * Class:     com_anythink_cocos2dx_bridge_ATListenerEventJniHelper
 * Method:    onInterstitialAdClicked
 * Signature: ()V
 */
JNIEXPORT void JNICALL
Java_com_anythink_cocos2dx_bridge_ATListenerEventJniHelper_onInterstitialAdClicked
        (JNIEnv *pEven, jclass pJclass, jstring placementIdJstring) {
    char *placementId = ATUtil::jstringTostring(pEven, placementIdJstring);
    ATCocosInterstitialAdListener *interstitialAdListener = ATListenerManager::getInstance()->getInterstitialListener(
            placementId);
    if (interstitialAdListener != NULL) {
        interstitialAdListener->onInterstitalClicked(placementId);
    }
}

/*
 * Class:     com_anythink_cocos2dx_bridge_ATListenerEventJniHelper
 * Method:    onInterstitialAdShow
 * Signature: ()V
 */
JNIEXPORT void JNICALL
Java_com_anythink_cocos2dx_bridge_ATListenerEventJniHelper_onInterstitialAdShow
        (JNIEnv *pEven, jclass pJclass, jstring placementIdJstring) {
    char *placementId = ATUtil::jstringTostring(pEven, placementIdJstring);
    ATCocosInterstitialAdListener *interstitialAdListener = ATListenerManager::getInstance()->getInterstitialListener(
            placementId);
    if (interstitialAdListener != NULL) {
        interstitialAdListener->onInterstitalShow(placementId);
    }
}

/*
 * Class:     com_anythink_cocos2dx_bridge_ATListenerEventJniHelper
 * Method:    onInterstitialAdClose
 * Signature: ()V
 */
JNIEXPORT void JNICALL
Java_com_anythink_cocos2dx_bridge_ATListenerEventJniHelper_onInterstitialAdClose
        (JNIEnv *pEven, jclass pJclass, jstring placementIdJstring) {
    char *placementId = ATUtil::jstringTostring(pEven, placementIdJstring);
    ATCocosInterstitialAdListener *interstitialAdListener = ATListenerManager::getInstance()->getInterstitialListener(
            placementId);
    if (interstitialAdListener != NULL) {
        interstitialAdListener->onInterstitalClose(placementId);
    }
}

/*
 * Class:     com_anythink_cocos2dx_bridge_ATListenerEventJniHelper
 * Method:    onInterstitialAdVideoStart
 * Signature: ()V
 */
JNIEXPORT void JNICALL
Java_com_anythink_cocos2dx_bridge_ATListenerEventJniHelper_onInterstitialAdVideoStart
        (JNIEnv *pEven, jclass pJclass, jstring placementIdJstring) {
}

/*
 * Class:     com_anythink_cocos2dx_bridge_ATListenerEventJniHelper
 * Method:    onInterstitialAdVideoEnd
 * Signature: ()V
 */
JNIEXPORT void JNICALL
Java_com_anythink_cocos2dx_bridge_ATListenerEventJniHelper_onInterstitialAdVideoEnd
        (JNIEnv *pEven, jclass pJclass, jstring placementIdJstring) {
}

/*
 * Class:     com_anythink_cocos2dx_bridge_ATListenerEventJniHelper
 * Method:    onInterstitialAdVideoError
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL
Java_com_anythink_cocos2dx_bridge_ATListenerEventJniHelper_onInterstitialAdVideoError
        (JNIEnv *pEven, jclass pJclass, jstring placementIdJstring, jstring errorMsg) {
}

/*
 * Class:     com_anythink_cocos2dx_bridge_ATListenerEventJniHelper
 * Method:    onRewardedVideoAdLoaded
 * Signature: ()V
 */
JNIEXPORT void JNICALL
Java_com_anythink_cocos2dx_bridge_ATListenerEventJniHelper_onRewardedVideoAdLoaded
        (JNIEnv *pEven, jclass pJclass, jstring placementIdJstring) {
    char *placementId = ATUtil::jstringTostring(pEven, placementIdJstring);
    ATCocosRewardedVideoAdListener *rewardedVideoAdListener = ATListenerManager::getInstance()->getRewardedVideoListener(
            placementId);
    if (rewardedVideoAdListener != NULL) {
        rewardedVideoAdListener->onRewardedVideoLoadSuccess(placementId);
    }
}

/*
 * Class:     com_anythink_cocos2dx_bridge_ATListenerEventJniHelper
 * Method:    onRewardedVideoAdFailed
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL
Java_com_anythink_cocos2dx_bridge_ATListenerEventJniHelper_onRewardedVideoAdFailed
        (JNIEnv *pEven, jclass pJclass, jstring placementIdJstring, jstring errorMsg) {
    char *placementId = ATUtil::jstringTostring(pEven, placementIdJstring);
    char *errorString = ATUtil::jstringTostring(pEven, errorMsg);
    ATCocosRewardedVideoAdListener *rewardedVideoAdListener = ATListenerManager::getInstance()->getRewardedVideoListener(
            placementId);
    if (rewardedVideoAdListener != NULL) {
        rewardedVideoAdListener->onRewardedVideoLoadFailed(placementId, errorString);
    }
}

/*
 * Class:     com_anythink_cocos2dx_bridge_ATListenerEventJniHelper
 * Method:    onRewardedVideoAdPlayStart
 * Signature: ()V
 */
JNIEXPORT void JNICALL
Java_com_anythink_cocos2dx_bridge_ATListenerEventJniHelper_onRewardedVideoAdPlayStart
        (JNIEnv *pEven, jclass pJclass, jstring placementIdJstring) {

    char *placementId = ATUtil::jstringTostring(pEven, placementIdJstring);
    ATCocosRewardedVideoAdListener *rewardedVideoAdListener = ATListenerManager::getInstance()->getRewardedVideoListener(
            placementId);
    if (rewardedVideoAdListener != NULL) {
        rewardedVideoAdListener->onRewardedVideoPlayStart(placementId);
    }

}

/*
 * Class:     com_anythink_cocos2dx_bridge_ATListenerEventJniHelper
 * Method:    onRewardedVideoAdPlayEnd
 * Signature: ()V
 */
JNIEXPORT void JNICALL
Java_com_anythink_cocos2dx_bridge_ATListenerEventJniHelper_onRewardedVideoAdPlayEnd
        (JNIEnv *pEven, jclass pJclass, jstring placementIdJstring) {

    char *placementId = ATUtil::jstringTostring(pEven, placementIdJstring);
    ATCocosRewardedVideoAdListener *rewardedVideoAdListener = ATListenerManager::getInstance()->getRewardedVideoListener(
            placementId);
    if (rewardedVideoAdListener != NULL) {
        rewardedVideoAdListener->onRewardedVideoPlayEnd(placementId);
    }

}


/*
 * Class:     com_anythink_cocos2dx_bridge_ATListenerEventJniHelper
 * Method:    onRewardedVideoAdPlayFailed
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL
Java_com_anythink_cocos2dx_bridge_ATListenerEventJniHelper_onRewardedVideoAdPlayFailed
        (JNIEnv *pEven, jclass pJclass, jstring placementIdJstring, jstring errorMsg) {
    char *placementId = ATUtil::jstringTostring(pEven, placementIdJstring);
    char *errorString = ATUtil::jstringTostring(pEven, errorMsg);
    ATCocosRewardedVideoAdListener *rewardedVideoAdListener = ATListenerManager::getInstance()->getRewardedVideoListener(
            placementId);
    if (rewardedVideoAdListener != NULL) {
        rewardedVideoAdListener->onRewardedVideoShowFail(placementId, errorString);
    }
}

/*
 * Class:     com_anythink_cocos2dx_bridge_ATListenerEventJniHelper
 * Method:    onRewardedVideoAdClosed
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL
Java_com_anythink_cocos2dx_bridge_ATListenerEventJniHelper_onRewardedVideoAdClosed
        (JNIEnv *pEven, jclass pJclass, jstring placementIdJstring, jboolean isReward) {
    char *placementId = ATUtil::jstringTostring(pEven, placementIdJstring);
    ATCocosRewardedVideoAdListener *rewardedVideoAdListener = ATListenerManager::getInstance()->getRewardedVideoListener(
            placementId);
    if (rewardedVideoAdListener != NULL) {
        rewardedVideoAdListener->onRewardedVideoClose(placementId, isReward == JNI_TRUE);
    }
}

/*
 * Class:     com_anythink_cocos2dx_bridge_ATListenerEventJniHelper
 * Method:    onRewardedVideoAdPlayClicked
 * Signature: ()V
 */
JNIEXPORT void JNICALL
Java_com_anythink_cocos2dx_bridge_ATListenerEventJniHelper_onRewardedVideoAdPlayClicked
        (JNIEnv *pEven, jclass pJclass, jstring placementIdJstring) {
    char *placementId = ATUtil::jstringTostring(pEven, placementIdJstring);
    ATCocosRewardedVideoAdListener *rewardedVideoAdListener = ATListenerManager::getInstance()->getRewardedVideoListener(
            placementId);
    if (rewardedVideoAdListener != NULL) {
        rewardedVideoAdListener->onRewardedVideoClicked(placementId);
    }
}

JNIEXPORT void JNICALL
Java_com_anythink_cocos2dx_bridge_ATListenerEventJniHelper_onRewardedVideoAdRewarded
(JNIEnv *pEven, jclass pJclass, jstring placementIdJstring) {
char *placementId = ATUtil::jstringTostring(pEven, placementIdJstring);
ATCocosRewardedVideoAdListener *rewardedVideoAdListener = ATListenerManager::getInstance()->getRewardedVideoListener(
        placementId);
if (rewardedVideoAdListener != NULL) {
rewardedVideoAdListener->onRewardedVideoDidRewardSuccess(placementId);
}
}


JNIEXPORT void JNICALL
Java_com_anythink_cocos2dx_bridge_ATListenerEventJniHelper_onNativeAdLoaded
        (JNIEnv *pEven, jclass pJclass, jstring
        placementIdJstring) {
    char *placementId = ATUtil::jstringTostring(pEven, placementIdJstring);
    ATCocosNativeAdListener *nativeAdListener = ATListenerManager::getInstance()->getNativeListener(
            placementId);
    if (nativeAdListener != NULL) {
        nativeAdListener->onNativeAdLoadSuccess(placementId);
    }

}

JNIEXPORT void JNICALL
Java_com_anythink_cocos2dx_bridge_ATListenerEventJniHelper_onNativeAdLoadFail
        (JNIEnv
         *pEven,
         jclass pJclass, jstring
         placementIdJstring, jstring errorMsg
        ) {
    char *placementId = ATUtil::jstringTostring(pEven, placementIdJstring);
    char *errorString = ATUtil::jstringTostring(pEven, errorMsg);
    ATCocosNativeAdListener *nativeAdListener = ATListenerManager::getInstance()->getNativeListener(
            placementId);
    if (nativeAdListener != NULL) {
        nativeAdListener->onNativeAdLoadFailed(placementId, errorString);
    }


}

JNIEXPORT void JNICALL
Java_com_anythink_cocos2dx_bridge_ATListenerEventJniHelper_onNativeAdShow
        (JNIEnv
         *pEven,
         jclass pJclass, jstring
         placementIdJstring) {
    char *placementId = ATUtil::jstringTostring(pEven, placementIdJstring);
    ATCocosNativeAdListener *nativeAdListener = ATListenerManager::getInstance()->getNativeListener(
            placementId);
    if (nativeAdListener != NULL) {
        nativeAdListener->onNativeAdShow(placementId);
    }
}

JNIEXPORT void JNICALL
Java_com_anythink_cocos2dx_bridge_ATListenerEventJniHelper_onNativeAdClick
        (JNIEnv
         *pEven,
         jclass pJclass, jstring
         placementIdJstring) {
    char *placementId = ATUtil::jstringTostring(pEven, placementIdJstring);
    ATCocosNativeAdListener *nativeAdListener = ATListenerManager::getInstance()->getNativeListener(
            placementId);
    if (nativeAdListener != NULL) {
        nativeAdListener->onNativeAdClick(placementId);
    }
}


/**---------------------------------------------------Native Banner----------------------------------------------------------------------**/

JNIEXPORT void JNICALL Java_com_anythink_cocos2dx_bridge_ATListenerEventJniHelper_onNativeBannerAdLoaded
        (JNIEnv
         *pEven,
         jclass pJclass, jstring
         placementIdJstring){
    char *placementId = ATUtil::jstringTostring(pEven, placementIdJstring);
    ATCocosNativeBannerAdListener *nativeBannerAdListener = ATListenerManager::getInstance()->getNativeBannerAdListener(
            placementId);
    if (nativeBannerAdListener != NULL) {
        nativeBannerAdListener->onNativeBannerAdLoadSuccess(placementId);
    }
}

JNIEXPORT void JNICALL Java_com_anythink_cocos2dx_bridge_ATListenerEventJniHelper_onNativeBannerAdLoadFail
        (JNIEnv
         *pEven,
         jclass pJclass, jstring
         placementIdJstring, jstring errorMsg){
    char *placementId = ATUtil::jstringTostring(pEven, placementIdJstring);
    char *errorString = ATUtil::jstringTostring(pEven, errorMsg);
    ATCocosNativeBannerAdListener *nativeBannerAdListener = ATListenerManager::getInstance()->getNativeBannerAdListener(
            placementId);
    if (nativeBannerAdListener != NULL) {
        nativeBannerAdListener->onNativeBannerAdLoadFailed(placementId, errorString);
    }
}

JNIEXPORT void JNICALL Java_com_anythink_cocos2dx_bridge_ATListenerEventJniHelper_onNativeBannerAdClick
        (JNIEnv
         *pEven,
         jclass pJclass, jstring
         placementIdJstring){
    char *placementId = ATUtil::jstringTostring(pEven, placementIdJstring);
    ATCocosNativeBannerAdListener *nativeBannerAdListener = ATListenerManager::getInstance()->getNativeBannerAdListener(
            placementId);
    if (nativeBannerAdListener != NULL) {
        nativeBannerAdListener->onNativeBannerClicked(placementId);
    }
}

JNIEXPORT void JNICALL Java_com_anythink_cocos2dx_bridge_ATListenerEventJniHelper_onNativeBannerAdShow
        (JNIEnv
         *pEven,
         jclass pJclass, jstring
         placementIdJstring){
    char *placementId = ATUtil::jstringTostring(pEven, placementIdJstring);
    ATCocosNativeBannerAdListener *nativeBannerAdListener = ATListenerManager::getInstance()->getNativeBannerAdListener(
            placementId);
    if (nativeBannerAdListener != NULL) {
        nativeBannerAdListener->onNativeBannerShow(placementId);
    }
}

JNIEXPORT void JNICALL Java_com_anythink_cocos2dx_bridge_ATListenerEventJniHelper_onNativeBannerAdClose
        (JNIEnv
         *pEven,
         jclass pJclass, jstring
         placementIdJstring){
    char *placementId = ATUtil::jstringTostring(pEven, placementIdJstring);
    ATCocosNativeBannerAdListener *nativeBannerAdListener = ATListenerManager::getInstance()->getNativeBannerAdListener(
            placementId);
    if (nativeBannerAdListener != NULL) {
        nativeBannerAdListener->onNativeBannerClose(placementId);
    }
}

JNIEXPORT void JNICALL Java_com_anythink_cocos2dx_bridge_ATListenerEventJniHelper_onNativeBannerAdAutoRefreshed
        (JNIEnv
         *pEven,
         jclass pJclass, jstring
         placementIdJstring){
    char *placementId = ATUtil::jstringTostring(pEven, placementIdJstring);
    ATCocosNativeBannerAdListener *nativeBannerAdListener = ATListenerManager::getInstance()->getNativeBannerAdListener(
            placementId);
    if (nativeBannerAdListener != NULL) {
        nativeBannerAdListener->onNativeBannerAutoRefresh(placementId);
    }
}

JNIEXPORT void JNICALL Java_com_anythink_cocos2dx_bridge_ATListenerEventJniHelper_onNativeBannerAdAutoRefreshFail
        (JNIEnv
         *pEven,
         jclass pJclass, jstring
         placementIdJstring, jstring errorMsg){
    char *placementId = ATUtil::jstringTostring(pEven, placementIdJstring);
    char *errorString = ATUtil::jstringTostring(pEven, errorMsg);
    ATCocosNativeBannerAdListener *nativeBannerAdListener = ATListenerManager::getInstance()->getNativeBannerAdListener(
            placementId);
    if (nativeBannerAdListener != NULL) {
        nativeBannerAdListener->onNativeBannerAutoRefreshFail(placementId, errorString);
    }
}
/*
 * Class:     com_anythink_cocos2dx_bridge_ATListenerEventJniHelper
 * Method:    onSDKInitSuccess
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_anythink_cocos2dx_bridge_ATListenerEventJniHelper_onSDKInitSuccess
        (JNIEnv *pEven, jclass
        pJclass,
         jstring pJstring
        ) {

}

/*
 * Class:     com_anythink_cocos2dx_bridge_ATListenerEventJniHelper
 * Method:    onSDKInitFail
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_anythink_cocos2dx_bridge_ATListenerEventJniHelper_onSDKInitFail
        (JNIEnv *pEven, jclass
        pJclass,
         jstring pJstring
        ) {

}

#ifdef __cplusplus
}
#endif
#endif
